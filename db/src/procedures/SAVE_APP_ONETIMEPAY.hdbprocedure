PROCEDURE "SAVE_APP_ONETIMEPAY"(
    IN it_onetime_pay "COM_STRADA_VP_ONETIME_PAY",
    IN it_req_flow "COM_STRADA_VP_REQUEST_FLOW",
    OUT ev_response NVARCHAR(800)
 )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic
   *************************************/

-- Data declarations  
DECLARE lv_extid NVARCHAR(100);
DECLARE lc_infoType15 NVARCHAR(5) := 'IT15';
DECLARE lc_action_submitted INTEGER := 2;
DECLARE lc_action_approval INTEGER := 4;
DECLARE lc_status_complete INTEGER := 4;
DECLARE lc_status_pending INTEGER := 3;
DECLARE lv_count INTEGER := 0;
DECLARE lv_additional_info NVARCHAR(256) := '';

DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        SELECT ::SQL_ERROR_MESSAGE INTO ev_response FROM DUMMY;
    END;
    
ev_response='';
SELECT "GET_UUID"() INTO lv_extid FROM DUMMY;

SELECT COUNT(*) INTO lv_count FROM "COM_STRADA_VP_ONETIME_PAY"
WHERE ("CUST_PAYCOMPONENT_ID","CUST_USERID", "EFFECTIVESTARTDATE","CUST_PAYCOMPVALUE") IN 
                (SELECT "CUST_PAYCOMPONENT_ID","CUST_USERID", "EFFECTIVESTARTDATE","CUST_PAYCOMPVALUE"  
                    FROM :it_onetime_pay)
                    AND ("STATUS" = lc_status_complete OR "STATUS" = lc_status_pending);
                    
IF lv_count != 0 THEN
    lv_additional_info = 'Record with same Start date, Paycomponent, Amount details already exists for the user!';
END IF;

INSERT INTO "COM_STRADA_VP_ONETIME_PAY"("ID","CUST_EXTERNALCODE","CUST_USERID",
                "CUST_PAYCOMPONENT_ID","EFFECTIVESTARTDATE","CUST_PAYCOMPVALUE","CUST_CURRENCYCODE",
                "CUST_CUSTOMSTRING","CUST_SEQUENCENUMBER","CUST_NUMBER","CUST_UNIT","CUST_NOTES","CUST_EXISTINGCODE",
                "STATUS","MODIFIEDAT","CREATEDBY","CREATEDAT","AUTOAPPROVED","CUST_CALCULATEDAMOUNT","CREATEDBYUSER",
                "CUST_USER","COUNTRY_ID","INITIATORLANGUAGE","CUST_ALTERNATIVECOSTCENTER_TXT",
                "CUST_UNIT_TXT","CUST_PAYCOMPONENT_TXT","CUST_ALTERNATIVECOSTCENTER","SPECIALRECOGNITION","DELIMITINDICATOR","DISPLAYAMOUNT")
        SELECT :lv_extid,:lv_extid, "CUST_USERID","CUST_PAYCOMPONENT_ID","EFFECTIVESTARTDATE",
               "CUST_PAYCOMPVALUE","CUST_CURRENCYCODE","CUST_CUSTOMSTRING","CUST_SEQUENCENUMBER","CUST_NUMBER","CUST_UNIT",
               "CUST_NOTES","CUST_EXISTINGCODE","STATUS",CURRENT_UTCTIMESTAMP,
               "CREATEDBY","CREATEDAT","AUTOAPPROVED","CUST_CALCULATEDAMOUNT","CREATEDBYUSER","CUST_USER",
               "COUNTRY_ID","INITIATORLANGUAGE","CUST_ALTERNATIVECOSTCENTER_TXT","CUST_UNIT_TXT","CUST_PAYCOMPONENT_TXT",
               "CUST_ALTERNATIVECOSTCENTER","SPECIALRECOGNITION","DELIMITINDICATOR","DISPLAYAMOUNT"
            FROM :it_onetime_pay; 
            

INSERT INTO "COM_STRADA_VP_AUDIT_LOG"("ID","EXTERNALCODE","ACTION_ID","CREATEDAT",
            "CREATEDBY","REQUESTTYPE","ADDITIONALINFO","CREATEDBYUSER")
    SELECT "LOGGER".NEXTVAL,lv_extid,
    CASE WHEN "AUTOAPPROVED" = 1 THEN lc_action_submitted ELSE lc_action_approval  END AS "ACTION_ID",
            CURRENT_UTCTIMESTAMP,"CREATEDBY",lc_infoType15,lv_additional_info,"CREATEDBYUSER"
        FROM :it_onetime_pay;

CALL "ADD_REQUESTFLOW"(lv_extid,:it_req_flow,ev_response);


END