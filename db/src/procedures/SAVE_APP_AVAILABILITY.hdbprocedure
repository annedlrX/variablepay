PROCEDURE "SAVE_APP_AVAILABILITY"(
    IN it_recpay "COM_STRADA_VP_AVAILABILITY",
    IN it_req_flow "COM_STRADA_VP_REQUEST_FLOW",
    OUT ev_response NVARCHAR(800)
 )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic
   *************************************/

-- Data declarations  
DECLARE lv_extid NVARCHAR(100);
DECLARE lc_infoType14 NVARCHAR(5) := '2004';
DECLARE lc_status_complete INTEGER := 4;
DECLARE lc_status_pending INTEGER := 3;
DECLARE lc_action_submitted INTEGER := 12;
DECLARE lc_action_created INTEGER := 14;
DECLARE lc_action_approval INTEGER := 13;
DECLARE lv_count INTEGER := 0;
DECLARE lv_additional_info NVARCHAR(256) := '';
DECLARE lc_paygroup_error NVARCHAR(256) := 'No matching PayGroup found';

DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        SELECT ::SQL_ERROR_MESSAGE INTO ev_response FROM DUMMY;
    END;
     
ev_response='';
SELECT "GET_UUID"() INTO lv_extid FROM DUMMY;

/*SELECT COUNT(*) INTO lv_count FROM "SOLVAY_VARPAY_QA"."com.solvay.varpayqa.db::Table.VP_AVAILABILITY"
--WHERE ("cust_payComponent.id","cust_userId", "effectiveStartDate","cust_endDate") IN 
                (SELECT "cust_payComponent.id","cust_userId", "effectiveStartDate","cust_endDate"  
                    FROM :it_recpay) 
                    AND ("status" = lc_status_complete OR "status" = lc_status_pending);
IF lv_count != 0 THEN
    lv_additional_info = 'Record with same Start/End dates, Paycomponent, Amount details already exists for the user!';
END IF;*/

    /*
INSERT INTO "VP_AVAILABILITY"("cust_externalCode", "cust_userId", "cust_payComponent.id", "effectiveStartDate",
"cust_startTime","cust_endDate","cust_endTime","cust_customString","cust_notes","cust_existingCode","status","lastModified","createdBy","createdOn","autoApproved",
"createdByUser","country.id","initiatorLanguage","cust_payComponent_txt","delimitIndicator","cust_dailyWorkSchedule","cust_dailyWorkScheduleTxt","cust_dwsGrouping",
"cust_dwsGroupingTxt","cust_wsVariant","cust_wsVariantTxt","cust_customVar1","cust_customVar2","cust_customVar3","cust_customVar4",	"cust_customVar5","cust_customVar6"
)

        SELECT :lv_extid, "cust_userId", "cust_payComponent.id", "effectiveStartDate",
"cust_startTime","cust_endDate","cust_endTime","cust_customString","cust_notes","cust_existingCode","status",CURRENT_UTCTIMESTAMP,"createdBy","createdOn","autoApproved",
"createdByUser","country.id","initiatorLanguage","cust_payComponent_txt","delimitIndicator","cust_dailyWorkSchedule","cust_dailyWorkScheduleTxt","cust_dwsGrouping",
"cust_dwsGroupingTxt","cust_wsVariant","cust_wsVariantTxt","cust_customVar1","cust_customVar2","cust_customVar3","cust_customVar4",	"cust_customVar5","cust_customVar6"
            FROM :it_recpay; 
            

INSERT INTO "COM_STRADA_VP_AUDIT_LOG"("id","externalCode","action.id","createdOn",
"createdBy","requestType","additionalInfo","createdByUser")
    SELECT "LOGGER".NEXTVAL,lv_extid,
    CASE WHEN "autoApproved" = 1 THEN lc_action_submitted ELSE lc_action_approval  END AS "action.id",
    CURRENT_UTCTIMESTAMP,"createdBy",lc_infoType14,
     lv_additional_info ,"createdByUser"
        FROM :it_recpay;
 
CALL "ADD_REQUESTFLOW"(lv_extid,:it_req_flow,ev_response); */

END