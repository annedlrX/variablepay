PROCEDURE "GET_WT_INFOTYPE"(
    IN it_infoType "TT_HCI_PAYCOMP",
    OUT et_infoType_14 "TT_HCI_PAYCOMP",
    OUT et_infoType_15 "TT_HCI_PAYCOMP",
    OUT et_infoType_None "TT_HCI_PAYCOMP",
    OUT ev_response NVARCHAR(500)
 )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic
   *************************************/

   DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        SELECT ::SQL_ERROR_MESSAGE INTO ev_response FROM DUMMY;
    END;
    
ev_response = '';
--   et_infoType = SELECT A."PAYCOMPONENT",B."INFOTYPE" FROM :it_infoType LEFT OUTER JOIN  ;
lt_infoType = SELECT A."PAYCOMPONENT" as "PAYCOMPONENT",IFNULL(B."INFOTYPE",'NO') as "INFOTYPE"
                FROM :it_infoType AS A
                LEFT OUTER JOIN "COM_STRADA_VP_WAGETYPE_MAPPING" AS B
                ON A."PAYCOMPONENT" = B."PAYCOMPONENT_ID";
                -- GROUP BY A."PAYCOMPONENT",B."INFOTYPE"; 

et_infoType_14 = SELECT "PAYCOMPONENT" FROM :lt_infoType WHERE "INFOTYPE" = 'IT14';
et_infoType_15 = SELECT "PAYCOMPONENT" FROM :lt_infoType WHERE "INFOTYPE" = 'IT15';
et_infoType_None = SELECT "PAYCOMPONENT" FROM :lt_infoType WHERE "INFOTYPE" = 'NO';


END