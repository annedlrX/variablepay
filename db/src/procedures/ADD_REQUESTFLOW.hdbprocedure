PROCEDURE "ADD_REQUESTFLOW"(
    IN iv_externalCode NVARCHAR(100) DEFAULT '',
    IN it_req_flow "COM_STRADA_VP_REQUEST_FLOW",
    OUT ev_response NVARCHAR(800)
 )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic
   *************************************/
-- Data declarations  
DECLARE lv_sequence INTEGER;
DECLARE lv_requestType NVARCHAR(5);
 
DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        SELECT ::SQL_ERROR_MESSAGE INTO ev_response FROM DUMMY;
        SELECT TOP 1 "WORKFLOWSEQUENCE","REQUESTTYPE" INTO lv_sequence,lv_requestType FROM :it_req_flow;
        ev_response := ev_response || ' : ' || :iv_externalCode || ' ,' || :lv_sequence ||' , '|| :lv_requestType;
    END;

ev_response = '';

INSERT INTO "COM_STRADA_VP_REQUEST_FLOW"("ID","EXTERNALCODE","REQUESTTYPE","WORKFLOWSEQUENCE",
            "FORWARDSEQUENCE","CREATEDAT","STATUS_ID","AGENT","NEXTAGENT","MODIFIEDBY","MODIFIEDAT","CREATEDBYUSER","NOTIFICATIONAGENT","WORKFLOW_ID")
        SELECT "REQFLOW".NEXTVAL,:iv_externalCode, "REQUESTTYPE","WORKFLOWSEQUENCE",
            "FORWARDSEQUENCE","CREATEDAT","STATUS_ID","AGENT","NEXTAGENT","MODIFIEDBY",CURRENT_UTCTIMESTAMP,"CREATEDBYUSER","NOTIFICATIONAGENT","WORKFLOW_ID"
            FROM :it_req_flow; 

END